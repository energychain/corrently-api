/*
 * Corrently.io
 *
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * API version: 2.0.0
 * Contact: dev@stromdao.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse2001Matrix Device switching recommendation.
type InlineResponse2001Matrix struct {
	H0 *InlineResponse2001MatrixH0 `json:"h0,omitempty"`
}

// NewInlineResponse2001Matrix instantiates a new InlineResponse2001Matrix object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2001Matrix() *InlineResponse2001Matrix {
	this := InlineResponse2001Matrix{}
	return &this
}

// NewInlineResponse2001MatrixWithDefaults instantiates a new InlineResponse2001Matrix object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2001MatrixWithDefaults() *InlineResponse2001Matrix {
	this := InlineResponse2001Matrix{}
	return &this
}

// GetH0 returns the H0 field value if set, zero value otherwise.
func (o *InlineResponse2001Matrix) GetH0() InlineResponse2001MatrixH0 {
	if o == nil || o.H0 == nil {
		var ret InlineResponse2001MatrixH0
		return ret
	}
	return *o.H0
}

// GetH0Ok returns a tuple with the H0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Matrix) GetH0Ok() (*InlineResponse2001MatrixH0, bool) {
	if o == nil || o.H0 == nil {
		return nil, false
	}
	return o.H0, true
}

// HasH0 returns a boolean if a field has been set.
func (o *InlineResponse2001Matrix) HasH0() bool {
	if o != nil && o.H0 != nil {
		return true
	}

	return false
}

// SetH0 gets a reference to the given InlineResponse2001MatrixH0 and assigns it to the H0 field.
func (o *InlineResponse2001Matrix) SetH0(v InlineResponse2001MatrixH0) {
	o.H0 = &v
}

func (o InlineResponse2001Matrix) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.H0 != nil {
		toSerialize["h0"] = o.H0
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2001Matrix struct {
	value *InlineResponse2001Matrix
	isSet bool
}

func (v NullableInlineResponse2001Matrix) Get() *InlineResponse2001Matrix {
	return v.value
}

func (v *NullableInlineResponse2001Matrix) Set(val *InlineResponse2001Matrix) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2001Matrix) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2001Matrix) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2001Matrix(val *InlineResponse2001Matrix) *NullableInlineResponse2001Matrix {
	return &NullableInlineResponse2001Matrix{value: val, isSet: true}
}

func (v NullableInlineResponse2001Matrix) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2001Matrix) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


