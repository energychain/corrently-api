/*
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * DispatchLocation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-05T14:10:22.651304Z[Etc/UTC]")
public class DispatchLocation {
  public static final String SERIALIZED_NAME_ENERGY = "energy";
  @SerializedName(SERIALIZED_NAME_ENERGY)
  private BigDecimal energy;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private Object location;


  public DispatchLocation energy(BigDecimal energy) {
    
    this.energy = energy;
    return this;
  }

   /**
   * Percentage of energy
   * @return energy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.2345677", value = "Percentage of energy")

  public BigDecimal getEnergy() {
    return energy;
  }


  public void setEnergy(BigDecimal energy) {
    this.energy = energy;
  }


  public DispatchLocation location(Object location) {
    
    this.location = location;
    return this;
  }

   /**
   * GeoJSON encoded location of target or source of green energy.
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "GeoJSON encoded location of target or source of green energy.")

  public Object getLocation() {
    return location;
  }


  public void setLocation(Object location) {
    this.location = location;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DispatchLocation dispatchLocation = (DispatchLocation) o;
    return Objects.equals(this.energy, dispatchLocation.energy) &&
        Objects.equals(this.location, dispatchLocation.location);
  }

  @Override
  public int hashCode() {
    return Objects.hash(energy, location);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DispatchLocation {\n");
    sb.append("    energy: ").append(toIndentedString(energy)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

