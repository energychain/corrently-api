/*
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Tariffh0
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-07T17:49:18.134057Z[Etc/UTC]")
public class Tariffh0 {
  public static final String SERIALIZED_NAME_AP = "ap";
  @SerializedName(SERIALIZED_NAME_AP)
  private Integer ap;

  public static final String SERIALIZED_NAME_GP = "gp";
  @SerializedName(SERIALIZED_NAME_GP)
  private Integer gp;


  public Tariffh0 ap(Integer ap) {
    
    this.ap = ap;
    return this;
  }

   /**
   * Energy price in cent per kwh. (Arbeitspreis) including all taxes and fees.
   * @return ap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Energy price in cent per kwh. (Arbeitspreis) including all taxes and fees.")

  public Integer getAp() {
    return ap;
  }


  public void setAp(Integer ap) {
    this.ap = ap;
  }


  public Tariffh0 gp(Integer gp) {
    
    this.gp = gp;
    return this;
  }

   /**
   * Base price in euro per montah (Grundpreis) including all taxes and fees.
   * @return gp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base price in euro per montah (Grundpreis) including all taxes and fees.")

  public Integer getGp() {
    return gp;
  }


  public void setGp(Integer gp) {
    this.gp = gp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tariffh0 tariffh0 = (Tariffh0) o;
    return Objects.equals(this.ap, tariffh0.ap) &&
        Objects.equals(this.gp, tariffh0.gp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ap, gp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tariffh0 {\n");
    sb.append("    ap: ").append(toIndentedString(ap)).append("\n");
    sb.append("    gp: ").append(toIndentedString(gp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

