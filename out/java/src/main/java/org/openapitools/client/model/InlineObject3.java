/*
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineObject3
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-07T17:52:38.075125Z[Etc/UTC]")
public class InlineObject3 {
  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private String account;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private String secret;

  public static final String SERIALIZED_NAME_180 = "1.8.0";
  @SerializedName(SERIALIZED_NAME_180)
  private Integer _1_8_0;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Integer value;

  public static final String SERIALIZED_NAME_ENERGY = "energy";
  @SerializedName(SERIALIZED_NAME_ENERGY)
  private Integer energy;

  public static final String SERIALIZED_NAME_ZIP = "zip";
  @SerializedName(SERIALIZED_NAME_ZIP)
  private String zip;


  public InlineObject3 account(String account) {
    
    this.account = account;
    return this;
  }

   /**
   * Stromkonto account (address) associated with this metering.
   * @return account
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stromkonto account (address) associated with this metering.")

  public String getAccount() {
    return account;
  }


  public void setAccount(String account) {
    this.account = account;
  }


  public InlineObject3 secret(String secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Some private password you might choose on first update. However you need to use the same secret on every further posts.
   * @return secret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Some private password you might choose on first update. However you need to use the same secret on every further posts.")

  public String getSecret() {
    return secret;
  }


  public void setSecret(String secret) {
    this.secret = secret;
  }


  public InlineObject3 _1_8_0(Integer _1_8_0) {
    
    this._1_8_0 = _1_8_0;
    return this;
  }

   /**
   * Meter Reading (prefered in Wh)
   * @return _1_8_0
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Meter Reading (prefered in Wh)")

  public Integer get180() {
    return _1_8_0;
  }


  public void set180(Integer _1_8_0) {
    this._1_8_0 = _1_8_0;
  }


  public InlineObject3 value(Integer value) {
    
    this.value = value;
    return this;
  }

   /**
   * Alias for 1.8.0
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Alias for 1.8.0")

  public Integer getValue() {
    return value;
  }


  public void setValue(Integer value) {
    this.value = value;
  }


  public InlineObject3 energy(Integer energy) {
    
    this.energy = energy;
    return this;
  }

   /**
   * Alias for 1.8.0
   * @return energy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Alias for 1.8.0")

  public Integer getEnergy() {
    return energy;
  }


  public void setEnergy(Integer energy) {
    this.energy = energy;
  }


  public InlineObject3 zip(String zip) {
    
    this.zip = zip;
    return this;
  }

   /**
   * Zipcode (Postleitzahl) of metered location
   * @return zip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Zipcode (Postleitzahl) of metered location")

  public String getZip() {
    return zip;
  }


  public void setZip(String zip) {
    this.zip = zip;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject3 inlineObject3 = (InlineObject3) o;
    return Objects.equals(this.account, inlineObject3.account) &&
        Objects.equals(this.secret, inlineObject3.secret) &&
        Objects.equals(this._1_8_0, inlineObject3._1_8_0) &&
        Objects.equals(this.value, inlineObject3.value) &&
        Objects.equals(this.energy, inlineObject3.energy) &&
        Objects.equals(this.zip, inlineObject3.zip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, secret, _1_8_0, value, energy, zip);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject3 {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    _1_8_0: ").append(toIndentedString(_1_8_0)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    energy: ").append(toIndentedString(energy)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

