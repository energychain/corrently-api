/*
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * MarketData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-07T17:49:18.134057Z[Etc/UTC]")
public class MarketData {
  public static final String SERIALIZED_NAME_START_TIMESTAMP = "start_timestamp";
  @SerializedName(SERIALIZED_NAME_START_TIMESTAMP)
  private Integer startTimestamp;

  public static final String SERIALIZED_NAME_END_TIMESTAMP = "end_timestamp";
  @SerializedName(SERIALIZED_NAME_END_TIMESTAMP)
  private Integer endTimestamp;

  public static final String SERIALIZED_NAME_MARKETPRICE = "marketprice";
  @SerializedName(SERIALIZED_NAME_MARKETPRICE)
  private BigDecimal marketprice;


  public MarketData startTimestamp(Integer startTimestamp) {
    
    this.startTimestamp = startTimestamp;
    return this;
  }

   /**
   * Timestamp in Standard Milliseconds
   * @return startTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1609293600000", value = "Timestamp in Standard Milliseconds")

  public Integer getStartTimestamp() {
    return startTimestamp;
  }


  public void setStartTimestamp(Integer startTimestamp) {
    this.startTimestamp = startTimestamp;
  }


  public MarketData endTimestamp(Integer endTimestamp) {
    
    this.endTimestamp = endTimestamp;
    return this;
  }

   /**
   * Timestamp in Standard Milliseconds
   * @return endTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1609293600000", value = "Timestamp in Standard Milliseconds")

  public Integer getEndTimestamp() {
    return endTimestamp;
  }


  public void setEndTimestamp(Integer endTimestamp) {
    this.endTimestamp = endTimestamp;
  }


  public MarketData marketprice(BigDecimal marketprice) {
    
    this.marketprice = marketprice;
    return this;
  }

   /**
   * Actual Marketprice for regional green power in EUR per MWh
   * @return marketprice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "43", value = "Actual Marketprice for regional green power in EUR per MWh")

  public BigDecimal getMarketprice() {
    return marketprice;
  }


  public void setMarketprice(BigDecimal marketprice) {
    this.marketprice = marketprice;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketData marketData = (MarketData) o;
    return Objects.equals(this.startTimestamp, marketData.startTimestamp) &&
        Objects.equals(this.endTimestamp, marketData.endTimestamp) &&
        Objects.equals(this.marketprice, marketData.marketprice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startTimestamp, endTimestamp, marketprice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketData {\n");
    sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
    sb.append("    endTimestamp: ").append(toIndentedString(endTimestamp)).append("\n");
    sb.append("    marketprice: ").append(toIndentedString(marketprice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

