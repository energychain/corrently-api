/*
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EaseeCharger
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-07T17:49:18.134057Z[Etc/UTC]")
public class EaseeCharger {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LAST_SESSION = "lastSession";
  @SerializedName(SERIALIZED_NAME_LAST_SESSION)
  private String lastSession;


  public EaseeCharger id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Given ID by easee api
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "EH780684", value = "Given ID by easee api")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EaseeCharger name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name set for charger
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name set for charger")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public EaseeCharger lastSession(String lastSession) {
    
    this.lastSession = lastSession;
    return this;
  }

   /**
   * lastSession Info as given by easee API
   * @return lastSession
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "lastSession Info as given by easee API")

  public String getLastSession() {
    return lastSession;
  }


  public void setLastSession(String lastSession) {
    this.lastSession = lastSession;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EaseeCharger easeeCharger = (EaseeCharger) o;
    return Objects.equals(this.id, easeeCharger.id) &&
        Objects.equals(this.name, easeeCharger.name) &&
        Objects.equals(this.lastSession, easeeCharger.lastSession);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, lastSession);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EaseeCharger {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    lastSession: ").append(toIndentedString(lastSession)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

