/*
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InlineObject4;
import org.openapitools.client.model.InlineResponse2006;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StromQuittungApi
 */
@Ignore
public class StromQuittungApiTest {

    private final StromQuittungApi api = new StromQuittungApi();

    
    /**
     * Create a receipt for an energy delivery (only valid in Germany).
     *
     * Creates a full featured receipt (Quittung) for an energy delivery as it appears on a charging session or similar events. Allows to embed receipt generation directly into external services. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void quittungCreateTest() throws ApiException {
        InlineObject4 inlineObject4 = null;
        InlineResponse2006 response = api.quittungCreate(inlineObject4);

        // TODO: test validations
    }
    
}
