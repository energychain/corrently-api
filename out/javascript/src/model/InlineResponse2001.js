/**
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ForecastItem from './ForecastItem';
import InlineResponse2001Location from './InlineResponse2001Location';
import InlineResponse2001Matrix from './InlineResponse2001Matrix';

/**
 * The InlineResponse2001 model module.
 * @module model/InlineResponse2001
 * @version 2.0.0
 */
class InlineResponse2001 {
    /**
     * Constructs a new <code>InlineResponse2001</code>.
     * @alias module:model/InlineResponse2001
     */
    constructor() { 
        
        InlineResponse2001.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2001</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2001} obj Optional instance to populate.
     * @return {module:model/InlineResponse2001} The populated <code>InlineResponse2001</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2001();

            if (data.hasOwnProperty('forecast')) {
                obj['forecast'] = ApiClient.convertToType(data['forecast'], [ForecastItem]);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = InlineResponse2001Location.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('matrix')) {
                obj['matrix'] = InlineResponse2001Matrix.constructFromObject(data['matrix']);
            }
        }
        return obj;
    }


}

/**
 * Prediction for the upcomming hours
 * @member {Array.<module:model/ForecastItem>} forecast
 */
InlineResponse2001.prototype['forecast'] = undefined;

/**
 * @member {module:model/InlineResponse2001Location} location
 */
InlineResponse2001.prototype['location'] = undefined;

/**
 * @member {module:model/InlineResponse2001Matrix} matrix
 */
InlineResponse2001.prototype['matrix'] = undefined;






export default InlineResponse2001;

