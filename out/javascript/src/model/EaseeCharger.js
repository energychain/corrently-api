/**
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EaseeCharger model module.
 * @module model/EaseeCharger
 * @version 2.0.0
 */
class EaseeCharger {
    /**
     * Constructs a new <code>EaseeCharger</code>.
     * @alias module:model/EaseeCharger
     */
    constructor() { 
        
        EaseeCharger.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EaseeCharger</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EaseeCharger} obj Optional instance to populate.
     * @return {module:model/EaseeCharger} The populated <code>EaseeCharger</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EaseeCharger();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('lastSession')) {
                obj['lastSession'] = ApiClient.convertToType(data['lastSession'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Given ID by easee api
 * @member {String} id
 */
EaseeCharger.prototype['id'] = undefined;

/**
 * Name set for charger
 * @member {String} name
 */
EaseeCharger.prototype['name'] = undefined;

/**
 * lastSession Info as given by easee API
 * @member {String} lastSession
 */
EaseeCharger.prototype['lastSession'] = undefined;






export default EaseeCharger;

