post:
  tags:
    - Stromkonto
  summary: Login (via Mail)
  operationId: stromkontoLogin
  description: >
    Sends a mail to a given email address to login this user. This function makes life a bit easier
    in order to not having to deal with private key protection on the user side as a shared key is used
    to sign transactions onbehalf of a particular account.  However viewing consensus information (balances) are public and *might move* from account to account without prior notification.
    Best practice for third party uses is to always start a session with the login RESP call and only create a user in case the response indicates an `unregistered` status.
  requestBody:
    required: true
    content:
       application/json:
        schema:
          type: object
          properties:
            email:
              type: string
  responses:
    '200':
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                description: Registration status of a user. In case unregistered gets returned use the `register` endpoint to (re-)register.
                type: string
                enum: [registered, unregistered]
