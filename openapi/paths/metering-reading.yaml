post:
  tags:
    - Metering (Decorator)
  summary: Meter Reading
  operationId: meteringPost
  description: >
    Post meter reading and get it decorated. Best practice is to first create a new Stromkonto with the register method and choose a nice secret to protect updates. Now regularly send updates to get readings (consumption) split into green power (1.8.1) and grey power (1.8.2).
  requestBody:
    required: true
    content:
       application/json:
        schema:
          type: object
          properties:
            account:
              type: string
              description: Stromkonto account (address) associated with this metering.
            secret:
              type: string
              description: Some private password you might choose on first update. However you need to use the same secret on every further posts.
            "1.8.0":
              type: integer
              description: Meter Reading (prefered in Wh)
            value:
              type: integer
              description: Alias for 1.8.0
            energy:
              type: integer
              description: Alias for 1.8.0
            zip:
              type: string
              description: Zipcode (Postleitzahl) of metered location
  responses:
    '200':
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              account:
                description: Stromkonto/Metering address allocated (this is not the MELOID!)
                type: string
              "1.8.0":
                description: Reading as provided as input in Wh
                type: integer
              "1.8.1":
                description: Green energy calculated using Green Power Index (GrünstromIndex) in Wh
                type: integer
              "1.8.2":
                description: Grey energy calculated using Green Power Index (GrünstromIndex) in Wh
                type: integer
              "timeStamp":
                description: API Consensus time this reading was fully received
                type: integer
              "_processingTime":
                description: Time this reading got imported into consensus (e.q. signed timestamp).
                type: integer
              "co2_g_standard":
                description: CO2 Emission of metered energy in a standard mix
                type: integer
              "co2_g_oekostrom":
                description: CO2 Emission of metered energy in a green energy mix (e.q. Ökostromtarif)
                type: integer
get:
  tags:
    - Metering (Decorator)
  summary: Meter Reading
  operationId: meteringGet
  description: >
    Retrieves a metered reading using account (Stromkonto).
  parameters:
    - name: account
      in: query
      description: Account/Address (Stromkonto) to retrieve reading for.
      schema:
        type: string
  responses:
    '200':
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              account:
                description: Stromkonto/Metering address allocated (this is not the MELOID!)
                type: string
              "1.8.0":
                description: Reading as provided as input in Wh
                type: integer
              "1.8.1":
                description: Green energy calculated using Green Power Index (GrünstromIndex) in Wh
                type: integer
              "1.8.2":
                description: Grey energy calculated using Green Power Index (GrünstromIndex) in Wh
                type: integer
              "timeStamp":
                description: API Consensus time this reading was fully received
                type: integer
              "_processingTime":
                description: Time this reading got imported into consensus (e.q. signed timestamp).
                type: integer
              "co2_g_standard":
                description: CO2 Emission of metered energy in a standard mix
                type: integer
              "co2_g_oekostrom":
                description: CO2 Emission of metered energy in a green energy mix (e.q. Ökostromtarif)
                type: integer
              "ttl":
                description: Time to Live for this reader. If no update is provided it gets decommissioned.
                type: integer
              "credits":
                description: Update credits this meter has. Gets refilled automtically to prevent too frequent updates
